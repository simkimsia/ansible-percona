---
- name: Ensure MySQL server is uninstalled
  action: apt pkg={{ item }} state=absent
  with_items:
          - mysql-server-core-5.5
          - mysql-client 
          - mysql-client-5.5
          - mysql-client-core-5.5

- name: Install percona database server
  action: apt pkg={{ item }} state=latest
  with_items:
          - percona-server-server-5.5
          - percona-server-client-5.5
          - percona-toolkit
          - percona-xtrabackup
          - python-mysqldb

- name: Copy .my.cnf file into the root home folder
  template: src=root-my-cnf.j2 dest=/root/.my.cnf owner=root mode=0600

- name: Update MySQL root password
  mysql_user: name=root host={{ item }} password={{ root_password }} login_user=root login_password={{ root_password }} check_implicit_admin=yes
  with_items:
          - "{{ ansible_hostname }}"
          - 127.0.0.1
          - localhost

- name: Ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent
  with_items:
          - "{{ ansible_hostname }}"
          - localhost

- name: remove test database
  mysql_db: name=test state=absent

- name: Create fnv1a_64
  shell: /usr/bin/mysql -e "CREATE FUNCTION fnv1a_64 RETURNS INTEGER SONAME 'libfnv1a_udf.so'" && touch /var/log/libfnv1a_udf.so.done creates=/var/log/libfnv1a_udf.so.done

- name: Create fnv_64
  shell: /usr/bin/mysql -e "CREATE FUNCTION fnv_64 RETURNS INTEGER SONAME 'libfnv_udf.so'" && touch /var/log/libfnv_udf.so.done creates=/var/log/libfnv_udf.so.done

- name: Create murmur_hash
  shell: /usr/bin/mysql -e "CREATE FUNCTION murmur_hash RETURNS INTEGER SONAME 'libmurmur_udf.so'" && touch /var/log/libmurmur_udf.so.done creates=/var/log/libmurmur_udf.so.done

- name: Write custom server configuration
  template: src=my.cnf.j2 dest=/etc/mysql/my.cnf owner=root mode=0644
  notify:
          - restart percona
